import { RelatedModelInputObjectTypeGenerator, RelatedGeneratorArgs, IGenerators } from '../../generator';
import { IGQLType, IGQLField } from '../../../datamodel/model';
export default class ModelUpdateInputGenerator extends RelatedModelInputObjectTypeGenerator {
    static generateScalarFieldTypeForInputType(model: IGQLType, field: IGQLField, generators: IGenerators): import("graphql/type/definition").GraphQLObjectType | import("graphql/type/definition").GraphQLScalarType | import("graphql/type/definition").GraphQLInterfaceType | import("graphql/type/definition").GraphQLUnionType | import("graphql/type/definition").GraphQLEnumType | import("graphql/type/definition").GraphQLInputObjectType | import("graphql/type/definition").GraphQLList<any> | import("graphql/type/definition").GraphQLNonNull<any> | null;
    /**
     * Generates an update model input field for a relational type, handling the four cases many/one and with/without related type.
     * @param model
     * @param field
     * @param generators
     */
    static generateRelationFieldForInputType(model: IGQLType, field: IGQLField, generators: IGenerators): import("graphql/type/definition").GraphQLInputObjectType;
    wouldBeEmpty(model: IGQLType, args: RelatedGeneratorArgs): boolean;
    getTypeName(input: IGQLType, args: RelatedGeneratorArgs): string;
    protected generateScalarFieldType(model: IGQLType, args: RelatedGeneratorArgs, field: IGQLField): import("graphql/type/definition").GraphQLObjectType | import("graphql/type/definition").GraphQLScalarType | import("graphql/type/definition").GraphQLInterfaceType | import("graphql/type/definition").GraphQLUnionType | import("graphql/type/definition").GraphQLEnumType | import("graphql/type/definition").GraphQLInputObjectType | import("graphql/type/definition").GraphQLList<any> | import("graphql/type/definition").GraphQLNonNull<any> | null;
    protected generateRelationFieldType(model: IGQLType, args: RelatedGeneratorArgs, field: IGQLField): import("graphql/type/definition").GraphQLInputObjectType;
}
