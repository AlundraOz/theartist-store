"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Internal manifestations of the interfaces declared above.
 */
var GQLFieldBase = /** @class */ (function () {
    function GQLFieldBase(name, type, isRequired) {
        this.name = name;
        this.type = type;
        this.isRequired = isRequired || false;
        this.isList = false;
        this.relatedField = null;
        this.relationName = null;
        this.isUnique = false;
        this.defaultValue = null;
    }
    return GQLFieldBase;
}());
exports.GQLFieldBase = GQLFieldBase;
var GQLScalarField = /** @class */ (function (_super) {
    __extends(GQLScalarField, _super);
    function GQLScalarField(name, type, isRequired) {
        return _super.call(this, name, type, isRequired) || this;
    }
    return GQLScalarField;
}(GQLFieldBase));
exports.GQLScalarField = GQLScalarField;
var GQLOneRelationField = /** @class */ (function (_super) {
    __extends(GQLOneRelationField, _super);
    function GQLOneRelationField(name, type, isRequired) {
        return _super.call(this, name, type, isRequired) || this;
    }
    return GQLOneRelationField;
}(GQLFieldBase));
exports.GQLOneRelationField = GQLOneRelationField;
// TODO: Create abstract base class for testing. 
var GQLMultiRelationField = /** @class */ (function (_super) {
    __extends(GQLMultiRelationField, _super);
    function GQLMultiRelationField(name, type, isRequired) {
        var _this = _super.call(this, name, type, isRequired) || this;
        _this.isList = true;
        return _this;
    }
    return GQLMultiRelationField;
}(GQLFieldBase));
exports.GQLMultiRelationField = GQLMultiRelationField;
//# sourceMappingURL=model.js.map